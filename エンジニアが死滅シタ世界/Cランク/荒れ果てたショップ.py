"""
https://paiza.jp/botchi/challenges/botchi_c_3001

あなたは今ファイルの管理をしようとしています。
各ファイルは番号で管理されていますが、一目でどの番号かわかるように、番号の左に適当な数の 0 を埋め込んで、番号の長さを固定することにしました。

例えば、番号の長さを 3 で固定したい場合、0 は 000, 4 は 004, 13 は 013, 144 は 144 というようにファイル番号をつけます。

3 つの整数 N, A, B が与えられます。
A 以上 B 以下の数それぞれについて、番号の長さが N にするようなゼロ埋めをするとファイル番号はどのように表示されるかを出力してください。

例えば、入力例 1 を説明する図は以下のようになります。



この例では、9, 10, 11 の 3 つの数を、すべて長さ 3 の番号にするために左に 0 を埋めることを考えます。

・9 は 1 桁の数なので、長さ 3 の番号にするには、2 つの 0 を左から埋める必要があります。
・10, 11 は 2 桁の数なので、長さ 3 の番号にするには、1 つの 0 を左から埋める必要があります。

入力される値
N A B
・番号の長さを表す整数 N、表示したい番号の区間を表す整数 A, B がこの順に半角スペース区切りで与えられます。
・入力は 1 行となり、末尾に改行が 1 つ入ります。

条件
・1 ≦ N ≦ 9
・0 ≦ A ≦ B ≦ 5000
・(B の桁数) ≦ N

期待する出力
A 以上 B 以下の各整数 i について、番号の長さが N になるように左側に 0 を埋め込んだものを出力してください。

出力の最後に改行を入れ、余計な文字、空行を含んではいけません。


入力例1
入力
3 9 11

出力
009
010
011

入力例2
入力
2 0 3

出力
00
01
02
03

"""


N, A, B = tuple(map(int, input().split()))
while A <= B:
    a_str = str(A)
    print("0" * (N - len(a_str)) + a_str)
    A += 1
