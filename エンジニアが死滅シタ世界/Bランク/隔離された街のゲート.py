"""
https://paiza.jp/botchi/challenges/botchi_b_2003

あなたは作りかけのゲームプログラムを発見しましたが、キャラクターの動きの制限する方法が未実装でした。 

制作中のゲームは、縦方向に H マスと横方向に W マスだけ広がる格子上のマップを用います。
左下のマスが原点であり、その座標を (0, 0) とします。
原点から横方向に x マス、縦方向に y マス進んだ座標を (x, y) と表記します。


現在の開発段階では障害物などはなく、キャラクターの初期座標が必ず (0, 0) です。
この状態から合計で N 回の上下左右への移動操作が行われます。
各移動操作はキャラクターの座標 (x, y) を以下のように変更します。


・上への移動 : キャラクターの座標を (x, y) から (x, y + 1) へ変更する。
・下への移動 : キャラクターの座標を (x, y) から (x, y - 1) へ変更する。
・左への移動 : キャラクターの座標を (x, y) から (x - 1, y) へ変更する。
・右への移動 : キャラクターの座標を (x, y) から (x + 1, y) へ変更する。


開発依頼書には、N 回の操作中にキャラクターが不正な座標にいることがないか判定するプログラムの作成が指示されています。
ここで不正な座標とは、マップ外の座標、すなわち格子上に存在しない座標すべてのことを指します。
例えば、入力例 1 および入力例 2 は以下のように考えることができます。





入力される値
H W N
d_1
...
d_N
・1 行目には、 マップの縦方向のマス数を表す整数 H と、横方向のマス数を表す整数 W および移動操作の回数を表す整数 N がこの順で半角スペース区切りで与えられます。
・続く N 行の i 行目 (1 ≦ i ≦ N) には、 i 回目の移動の方向を表す文字 d_i　が与えられます。"U"であれば上、"D"であれば下、"L"であれば左、"R"であれば右への移動に対応します。
・入力は合計で N + 1 行となり、 N + 1 行目の末尾に改行が １ つ入ります。

条件
・1 ≦ H, W ≦ 50
・1 ≦ N ≦ 500
・各 i (1 ≦ i ≦ N) について d_i は英大文字"U"、"D"、"L"、"R"のいずれか。

期待する出力
N 回の移動操作の中で、キャラクターが不正な座標にいることがある場合は"invalid"を、そうでない場合は"valid"を 1 行に出力してください。

入力例1
入力
3 3 5
U
R
D
R
L

出力
valid

入力例2
入力
4 4 7
U
U
R
R
R
R
D

出力
invalid
"""


def move(point, direction):
    if direction is "U":
        point[1] += 1
    elif direction is "D":
        point[1] -= 1
    elif direction is "L":
        point[0] -= 1
    elif direction is "R":
        point[0] += 1
    return point


H, W, N = list(map(int, input().split()))
point = [0, 0]
is_out = False

for _ in range(N):
    point = move(point, input())
    is_out = not (0 <= point[0] < W and 0 <= point[1] < H)

print("invalid" if is_out else "valid")
